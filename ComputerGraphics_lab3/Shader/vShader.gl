#version 330 core

layout(location = 0) in vec2 a_position;
layout(location = 1) in vec2 a_texCoord;

uniform mat4 u_progection;
uniform mat4 u_MV;
out vec3 v_norm;
out vec3 v_point;
out vec2 v_texCoord;

float foo(vec2 p)
{
    return 10*cos(length(p)/10);
    //return 1;
}

vec3 grad(vec3 p)
{
    float len = length(p.xz);
    return vec3( p.x*sin(len/10)/max(len,0.001),
                 1.0,
                 p.z*sin(len/10)/max(len,0.001) );
    //return vec3(0.0,1.0,0.0);
}

void main()
{
    v_texCoord = a_texCoord;
    vec3 point =vec3(a_position[0],foo(a_position),a_position[1]);
    v_norm = transpose(inverse(mat3(u_MV))) * grad(point);
    v_point = vec3(u_MV * vec4(point,1.0));
    gl_Position = u_progection * u_MV * vec4(point, 1.0);
}
